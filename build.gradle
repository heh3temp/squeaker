plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
}

group = 'com.hamsterbusters'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
//    maven {
//        url "http://localhost:8081/repository/maven-central/"
//        allowInsecureProtocol = true
//
//        credentials {
//            username = nexusUsername
//            password = nexusPassword
//        }
//    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacocoTestReport {
    reports {
        xml.enabled = true
    }
}

sonarqube {
    properties({
        property 'sonar.host.url', 'http://localhost:9000'
    })
}


test {
    useJUnitPlatform()
}

test.finalizedBy jacocoTestReport

tasks.named('sonarqube').configure({
    dependsOn test
})